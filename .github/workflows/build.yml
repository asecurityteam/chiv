name: build
on: [push, pull_request]
jobs:

  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Install linter
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint
      - name: Run linter
        run: golangci-lint run

  unit:
    name: Unit Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go-version: [1.12.9, 1.13]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run unit tests
        run: go test -v -p 1 -tags=unit -covermode=atomic -timeout=60s ./...

  benchmark:
    name: Benchmark
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Benchmark
        run: go test -run=Benchmark -benchmem -bench=.

  integration:
    name: Integration Tests
    runs-on: ubuntu-18.04
    services:
      s3:
        image: localstack/localstack:latest
        env:
          SERVICES: s3
      postgres:
        image: healthcheck/postgres
        env:
          POSTGRES_DB: testdb
          POSTGRES_PASSWORD: password
      mariadb:
        image: healthcheck/mariadb
        env:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: password
    steps:
      - uses: actions/checkout@v1
      - name: Run integration tests
        run: go test -p 1 -tags=integration -covermode=atomic -timeout=60s ./...
        env:
          AWS_ACCESS_KEY_ID: bogus
          AWS_SECRET_KEY: bogus
          AWS_REGION: us-east-1
          AWS_ENDPOINT: http://s3:4572
          POSTGRES_URL: postgres://postgres:password@postgres/testdb?sslmode=disable
          MARIADB_URL: root:password@tcp(mariadb:3306)/testdb?charset=utf8&parseTime=True&loc=Local
