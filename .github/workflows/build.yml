name: build
on: [push, pull_request]
jobs:

  lint:
    name: Lint
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go-version: [1.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install linter
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s v1.18.0
      - name: Run linter
        run: ./bin/golangci-lint run

  unit:
    name: Unit Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go-version: [1.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download
      - name: Run unit tests
        run: go test -v -p 1 -tags=unit -covermode=atomic -timeout=60s ./...

  integration:
    name: Integration Tests
    runs-on: ubuntu-18.04
    services:
      s3:
        image: localstack/localstack:latest
        ports:
          - 4572:4572
        env:
          SERVICES: s3
      postgres:
        image: healthcheck/postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testdb
          POSTGRES_PASSWORD: password
      mariadb:
        image: healthcheck/mariadb
        ports:
          - 33066:3306
        env:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: password
    strategy:
      matrix:
        go-version: [1.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download
      - name: Run integration tests
        run: go test -p 1 -tags=integration -covermode=atomic -timeout=60s ./...
        env:
          AWS_ACCESS_KEY_ID: bogus
          AWS_SECRET_KEY: bogus
          AWS_REGION: us-east-1
          AWS_ENDPOINT: http://localhost:${{ job.services.s3.ports['4572'] }}
          POSTGRES_URL: postgres://postgres:password@localhost:${{ job.services.postgres.ports['5432'] }}/testdb?sslmode=disable
          MARIADB_URL: root:password@tcp(localhost:${{ job.services.mariadb.ports['33066'] }})/testdb?charset=utf8&parseTime=True&loc=Local